name: Wheels

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - '**'

concurrency:
  group: wheel-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
      name: Test on ${{ matrix.os }} with Python ${{ matrix.python_version }}
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [windows-latest, macos-latest, ubuntu-latest]
          python_version: ['3.9' , '3.10', '3.11', '3.12']
      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python ${{ matrix.python_version }}
        with:
          python-version: ${{ matrix.python_version }}
      - name: install openbls
        if: runner.os == 'macOS'
        run: brew install libomp
      - name: Install tox
        run: pip install tox numpy tox-gh-actions
      - name: Test Backend
        run: OPENBLAS="$(brew --prefix openblas)" OMP="$(brew --prefix libomp)" tox
        if: runner.os == 'macOS'
      - name: Test Backend
        run: tox
        if: runner.os != 'macOS'


  build_wheels:
    needs: test
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: runner.os == 'macOS'
        run: brew install openblas

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          OPENBLAS: "$(brew --prefix openblas)"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: test
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist .

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/PartSegCore-compiled-backend
    permissions:
        id-token: write  # IMPORTANT: mandatory for trusted publishing
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
