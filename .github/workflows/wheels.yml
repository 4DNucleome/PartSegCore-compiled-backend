name: Wheels

on:
  push:
    branches-ignore:
      - 'release/**'
      - 'dependabot/**'
    tags:
      - '*'
  pull_request:
    branches:
      - '**'


jobs:
  test:
      name: Test on ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: [windows-latest, macos-latest, ubuntu-latest]
      steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
        name: Install Python 3.6
        with:
          python-version: 3.6
      - uses: actions/setup-python@v2
        name: Install Python 3.7
        with:
          python-version: 3.7
      - uses: actions/setup-python@v2
        name: Install Python 3.8
        with:
          python-version: 3.8
      - uses: actions/setup-python@v2
        name: Install Python 3.9
        with:
          python-version: 3.9
      - name: Install tox
        run: pip install tox numpy
      - name: Test PartSeg
        run: tox

  build_wheels:
    needs: test
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v1

      - if: runner.os == 'macOS'
        run: brew install openblas

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.0a1
        env:
          OPENBLAS: "$(brew --prefix openblas)"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: test
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          pip install numpy
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/
